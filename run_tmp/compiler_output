Parsing file ./test/fixtures/public/ScopeChange.jmm
Parser starting
0 START
  1 ImportDeclaration
    2 STATIC
    2 [ID: io] 
    2 [ID: println] 
    2 IMPORTMETHOD
    2 [Type: int] 
  1 ImportDeclaration
    2 [ID: Quicksort] 
    2 [ID: printL] 
    2 IMPORTMETHOD
    2 [Type: int[]] 
    2 RETURN
      3 [Type: boolean] 
  1 ClassDeclaration
    2 ClassHead
      3 [ID: Scoped] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: printL] 
        4 [Type: int[]] 
        4 [ID: a] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 4] 
        4 DIRECTEXPRESSION
          5 IdentifierAccess
            6 [ID: io] 
            6 SELECTOR
              7 [ID: println] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: a] 
                  9 ArrayAccess
                    10 SUB
                      11 [Int Constant: 3] 
                      11 IdentifierAccess
                        12 [ID: i] 
        4 Attribution
          5 Target
            6 [ID: i] 
          5 ADD
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 1] 
      3 RETURN
        4 [Boolean Constant: true] 
    2 NormalMethod
      3 MethodHead
        4 [Type: Quicksort] 
        4 [ID: getQuicky] 
      3 VarDeclaration
        4 [Type: Quicksort] 
        4 [ID: b] 
      3 Attribution
        4 Target
          5 [ID: b] 
        4 New
          5 [ID: Quicksort] 
          5 SelectorArguments
      3 RETURN
        4 IdentifierAccess
          5 [ID: b] 
    2 MainMethod
      3 [ID: args] 
      3 VarDeclaration
        4 [Type: Scoped] 
        4 [ID: a] 
      3 VarDeclaration
        4 [Type: Quicksort] 
        4 [ID: b] 
      3 VarDeclaration
        4 [Type: int[]] 
        4 [ID: c] 
      3 Attribution
        4 Target
          5 [ID: a] 
        4 New
          5 [ID: Scoped] 
          5 SelectorArguments
      3 Attribution
        4 Target
          5 [ID: b] 
        4 New
          5 [ID: Quicksort] 
          5 SelectorArguments
      3 Attribution
        4 Target
          5 [ID: c] 
        4 New
          5 [Int Constant: 4] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 0] 
        4 [Int Constant: 4] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 1] 
        4 [Int Constant: 3] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 2] 
        4 [Int Constant: 2] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 3] 
        4 [Int Constant: 1] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: a] 
          5 SELECTOR
            6 [ID: printL] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: c] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: a] 
          5 SELECTOR
            6 [ID: getQuicky] 
            6 SelectorArguments
          5 SELECTOR
            6 [ID: printL] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: c] 
0 START
  1 ImportDeclaration
    2 STATIC
    2 [ID: io] 
    2 [ID: println] 
    2 IMPORTMETHOD
    2 [Type: int] 
  1 ImportDeclaration
    2 [ID: Quicksort] 
    2 [ID: printL] 
    2 IMPORTMETHOD
    2 [Type: int[]] 
    2 RETURN
      3 [Type: boolean] 
  1 ClassDeclaration
    2 ClassHead
      3 [ID: Scoped] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: printL] 
        4 [Type: int[]] 
        4 [ID: a] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 4] 
        4 DIRECTEXPRESSION
          5 IdentifierAccess
            6 [ID: io] 
            6 SELECTOR
              7 [ID: println] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: a] 
                  9 ArrayAccess
                    10 SUB
                      11 [Int Constant: 3] 
                      11 IdentifierAccess
                        12 [ID: i] 
        4 Attribution
          5 Target
            6 [ID: i] 
          5 ADD
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 1] 
      3 RETURN
        4 [Boolean Constant: true] 
    2 NormalMethod
      3 MethodHead
        4 [Type: Quicksort] 
        4 [ID: getQuicky] 
      3 VarDeclaration
        4 [Type: Quicksort] 
        4 [ID: b] 
      3 Attribution
        4 Target
          5 [ID: b] 
        4 New
          5 [ID: Quicksort] 
          5 SelectorArguments
      3 RETURN
        4 IdentifierAccess
          5 [ID: b] 
    2 MainMethod
      3 [ID: args] 
      3 VarDeclaration
        4 [Type: Scoped] 
        4 [ID: a] 
      3 VarDeclaration
        4 [Type: Quicksort] 
        4 [ID: b] 
      3 VarDeclaration
        4 [Type: int[]] 
        4 [ID: c] 
      3 Attribution
        4 Target
          5 [ID: a] 
        4 New
          5 [ID: Scoped] 
          5 SelectorArguments
      3 Attribution
        4 Target
          5 [ID: b] 
        4 New
          5 [ID: Quicksort] 
          5 SelectorArguments
      3 Attribution
        4 Target
          5 [ID: c] 
        4 New
          5 [Int Constant: 4] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 0] 
        4 [Int Constant: 4] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 1] 
        4 [Int Constant: 3] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 2] 
        4 [Int Constant: 2] 
      3 Attribution
        4 Target
          5 [ID: c] 
          5 ArrayAccess
            6 [Int Constant: 3] 
        4 [Int Constant: 1] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: a] 
          5 SELECTOR
            6 [ID: printL] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: c] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: a] 
          5 SELECTOR
            6 [ID: getQuicky] 
            6 SelectorArguments
          5 SELECTOR
            6 [ID: printL] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: c] 
Analyzer starting on ./test/fixtures/public/ScopeChange.jmm
Node Depth 0
Node Symbol: 
Symbol 
	Name root
	Type 5
	Signature null

Nmb children 3
Symbol Table: 
Symbol 
	Name io
	Type 0
	Signature io

Symbol 
	Name io
	Type 1
	Signature io()

Symbol 
	Name Quicksort
	Type 0
	Signature Quicksort

Symbol 
	Name Quicksort
	Type 1
	Signature Quicksort()

Symbol 
	Name Scoped
	Type 1
	Signature Scoped()

Symbol 
	Name Scoped
	Type 0
	Signature Scoped

Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name io
	Type 0
	Signature io

Nmb children 1
Symbol Table: 
Symbol 
	Name println
	Type 2
	Signature println(int)

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name println
	Type 2
	Signature println(int)

Nmb children 0
Symbol Table: 
Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name Quicksort
	Type 0
	Signature Quicksort

Nmb children 1
Symbol Table: 
Symbol 
	Name printL
	Type 1
	Signature printL(int[])

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name printL
	Type 1
	Signature printL(int[])

Nmb children 0
Symbol Table: 
Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name Scoped
	Type 0
	Signature Scoped

Nmb children 3
Symbol Table: 
Symbol 
	Name printL
	Type 1
	Signature printL(int[])

Symbol 
	Name getQuicky
	Type 1
	Signature getQuicky()

Symbol 
	Name main
	Type 2
	Signature main(String[])

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name printL
	Type 1
	Signature printL(int[])

Nmb children 0
Symbol Table: 
Symbol 
	Name a
	Type 4
	Signature a

Symbol 
	Name i
	Type 4
	Signature i

Structures (3): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: WHILE
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: CONSTANT return type int
    Structure Type: Expression: ACCESS Symbol io return type void
     Structure Type: Expression: METHOD ACCESS Symbol println(int) return type void
      Structure Type: Expression: ACCESS Symbol a return type int
       Structure Type: Expression: ARRAY ACCESS return type int
        Structure Type: Expression: SUB return type int
         Structure Type: Expression: CONSTANT return type int
         Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: ADD return type int
      Structure Type: Expression: ACCESS Symbol i return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: Expression: RETURN return type boolean
    Structure Type: Expression: CONSTANT return type boolean



Node Depth 2
Node Symbol: 
Symbol 
	Name getQuicky
	Type 1
	Signature getQuicky()

Nmb children 0
Symbol Table: 
Symbol 
	Name b
	Type 4
	Signature b

Structures (2): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol b return type Quicksort
    Structure Type: Expression: NEW METHOD ACCESS Symbol Quicksort() return type Quicksort
   Structure Type: Expression: RETURN Symbol b return type Quicksort
    Structure Type: Expression: ACCESS Symbol b return type Quicksort



Node Depth 2
Node Symbol: 
Symbol 
	Name main
	Type 2
	Signature main(String[])

Nmb children 0
Symbol Table: 
Symbol 
	Name args
	Type 4
	Signature args

Symbol 
	Name a
	Type 4
	Signature a

Symbol 
	Name b
	Type 4
	Signature b

Symbol 
	Name c
	Type 4
	Signature c

Structures (9): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol a return type Scoped
    Structure Type: Expression: NEW METHOD ACCESS Symbol Scoped() return type Scoped
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol b return type Quicksort
    Structure Type: Expression: NEW METHOD ACCESS Symbol Quicksort() return type Quicksort
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol c return type int[]
    Structure Type: Expression: INT ARRAY return type int[]
     Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol c return type int
    Structure Type: Expression: ARRAY ACCESS return type int
     Structure Type: Expression: CONSTANT return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol c return type int
    Structure Type: Expression: ARRAY ACCESS return type int
     Structure Type: Expression: CONSTANT return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol c return type int
    Structure Type: Expression: ARRAY ACCESS return type int
     Structure Type: Expression: CONSTANT return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol c return type int
    Structure Type: Expression: ARRAY ACCESS return type int
     Structure Type: Expression: CONSTANT return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: Expression: ACCESS Symbol a return type boolean
    Structure Type: Expression: METHOD ACCESS Symbol printL(int[]) return type boolean
     Structure Type: Expression: ACCESS Symbol c return type int[]
   Structure Type: Expression: ACCESS Symbol a return type boolean
    Structure Type: Expression: METHOD ACCESS Symbol getQuicky() return type Quicksort
    Structure Type: Expression: METHOD ACCESS Symbol printL(int[]) return type boolean
     Structure Type: Expression: ACCESS Symbol c return type int[]




.class public Scoped
.super java/lang/Object
.method <init>()V
aload_0
invokenonvirtual java/lang/Object/<init>()V
return
.end method
; println/io
; printL/Quicksort
.method public printL([I)Z
.limit stack 99
.limit locals 4
; 7
iconst_0
istore_2		;i


while_0:
; 8
iload_2		;i
; 7
iconst_4
if_icmpge else_0

; 8
; 8
aload_1		;a
; 6
; 7
iconst_3
; 8
iload_2		;i
isub
iaload
; 10
invokestatic io/println(I)V

; 3
; 8
iload_2		;i
; 7
iconst_1
iadd
istore_2		;i

goto while_0
else_0:


; 13
; 7
iconst_1
ireturn


.end method
.method public getQuicky()LQuicksort;
.limit stack 99
.limit locals 2
; 10
new Quicksort
dup
invokespecial Quicksort/<init>()V
astore_1		;b


; 13
; 8
aload_1		;b
areturn


.end method
.method public static main([Ljava/lang/String;)V
.limit stack 99
.limit locals 6
; 10
new Scoped
dup
invokespecial Scoped/<init>()V
astore_2		;a


; 10
new Quicksort
dup
invokespecial Quicksort/<init>()V
astore_3		;b


; 12
; 7
iconst_4
newarray int
astore 4		;c


aload 4		;c
; 7
iconst_0
; 7
iconst_4
iastore


aload 4		;c
; 7
iconst_1
; 7
iconst_3
iastore


aload 4		;c
; 7
iconst_2
; 7
iconst_2
iastore


aload 4		;c
; 7
iconst_3
; 7
iconst_1
iastore


; 8
aload_2		;a
; 8
aload 4		;c
; 10
invokevirtual Scoped/printL([I)Z
pop


; 8
aload_2		;a
; 10
invokevirtual Scoped/getQuicky()LQuicksort;
; 8
aload 4		;c
; 10
invokevirtual Quicksort/printL([I)Z
pop


return
.end method

COMPILATION SUCCESSFUL
