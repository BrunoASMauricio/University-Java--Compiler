Parsing file ./test/fixtures/public/ImproperStaticAccess.jmm
Parser starting
0 START
  1 ClassDeclaration
    2 ClassHead
      3 [ID: Badname] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: abc] 
      3 RETURN
        4 [Boolean Constant: true] 
    2 MainMethod
      3 [ID: a] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: c] 
      3 VarDeclaration
        4 [Type: Badname] 
        4 [ID: d] 
      3 Attribution
        4 Target
          5 [ID: d] 
        4 New
          5 [ID: Badname] 
          5 SelectorArguments
      3 DIRECTEXPRESSION
        4 THIS
          5 SELECTOR
            6 [ID: abc] 
            6 SelectorArguments
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: abc] 
          5 SelectorArguments
0 START
  1 ClassDeclaration
    2 ClassHead
      3 [ID: Badname] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: abc] 
      3 RETURN
        4 [Boolean Constant: true] 
    2 MainMethod
      3 [ID: a] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: c] 
      3 VarDeclaration
        4 [Type: Badname] 
        4 [ID: d] 
      3 Attribution
        4 Target
          5 [ID: d] 
        4 New
          5 [ID: Badname] 
          5 SelectorArguments
      3 DIRECTEXPRESSION
        4 THIS
          5 SELECTOR
            6 [ID: abc] 
            6 SelectorArguments
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: abc] 
          5 SelectorArguments
Analyzer starting on ./test/fixtures/public/ImproperStaticAccess.jmm
Node Depth 0
Node Symbol: 
Symbol 
	Name root
	Type 5
	Signature null

Nmb children 1
Symbol Table: 
Symbol 
	Name Badname
	Type 1
	Signature Badname()

Symbol 
	Name Badname
	Type 0
	Signature Badname

Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name Badname
	Type 0
	Signature Badname

Nmb children 2
Symbol Table: 
Symbol 
	Name abc
	Type 1
	Signature abc()

Symbol 
	Name main
	Type 2
	Signature main(String[])

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name abc
	Type 1
	Signature abc()

Nmb children 0
Symbol Table: 
Structures (1): 
   Structure Type: Expression: RETURN return type boolean
    Structure Type: Expression: CONSTANT return type boolean



Node Depth 2
Node Symbol: 
Symbol 
	Name main
	Type 2
	Signature main(String[])

Nmb children 0
Symbol Table: 
Symbol 
	Name a
	Type 4
	Signature a

Symbol 
	Name c
	Type 3
	Signature c

Symbol 
	Name d
	Type 4
	Signature d

Structures (3): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol d return type Badname
    Structure Type: Expression: NEW METHOD ACCESS Symbol Badname() return type Badname
   Structure Type: Expression: ACCESS return type boolean
    Structure Type: Expression: METHOD ACCESS Symbol abc() return type boolean
   Structure Type: Expression: METHOD ACCESS Symbol abc() return type boolean




.class public Badname
.super java/lang/Object
.method <init>()V
aload_0
invokenonvirtual java/lang/Object/<init>()V
return
.end method
.method public abc()Z
.limit stack 99
.limit locals 1
; 13
; 7
iconst_1
ireturn


.end method
.method public static main([Ljava/lang/String;)V
.limit stack 99
.limit locals 5
; 10
new Badname
dup
invokespecial Badname/<init>()V
astore_2		;d


; 8
aload_0
; 10
; true
invokevirtual Badname/abc()Z
pop


; false
aload_0
invokevirtual Badname/abc()Z
pop


return
.end method

Semantic exceptions: 2
java.lang.RuntimeException: Can't access "this" from a static method
java.lang.RuntimeException: Non static method access from a static method
Exception in thread "main" java.lang.RuntimeException: Semantic error
	at Analyzer.throwAllExceptions(Analyzer.java:1043)
	at Main.main(Main.java:104)
