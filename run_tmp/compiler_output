Parsing file ./test/fixtures/public/QuickSort.jmm
Parser starting
0 START
  1 ImportDeclaration
    2 STATIC
    2 [ID: io] 
    2 [ID: println] 
    2 IMPORTMETHOD
    2 [Type: int] 
  1 ClassDeclaration
    2 ClassHead
      3 [ID: Quicksort] 
    2 MainMethod
      3 [ID: a] 
      3 VarDeclaration
        4 [Type: int[]] 
        4 [ID: L] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 VarDeclaration
        4 [Type: Quicksort] 
        4 [ID: q] 
      3 Attribution
        4 Target
          5 [ID: L] 
        4 New
          5 [Int Constant: 10] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: i] 
            6 IdentifierAccess
              7 [ID: L] 
              7 SELECTOR
                8 LENGTH
        4 Attribution
          5 Target
            6 [ID: L] 
            6 ArrayAccess
              7 IdentifierAccess
                8 [ID: i] 
          5 SUB
            6 IdentifierAccess
              7 [ID: L] 
              7 SELECTOR
                8 LENGTH
            6 IdentifierAccess
              7 [ID: i] 
        4 Attribution
          5 Target
            6 [ID: i] 
          5 ADD
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 1] 
      3 Attribution
        4 Target
          5 [ID: q] 
        4 New
          5 [ID: Quicksort] 
          5 SelectorArguments
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: q] 
          5 SELECTOR
            6 [ID: quicksort] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: L] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: q] 
          5 SELECTOR
            6 [ID: printL] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: L] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: printL] 
        4 [Type: int[]] 
        4 [ID: L] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: i] 
            6 IdentifierAccess
              7 [ID: L] 
              7 SELECTOR
                8 LENGTH
        4 DIRECTEXPRESSION
          5 IdentifierAccess
            6 [ID: io] 
            6 SELECTOR
              7 [ID: println] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                  9 ArrayAccess
                    10 IdentifierAccess
                      11 [ID: i] 
        4 Attribution
          5 Target
            6 [ID: i] 
          5 ADD
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 1] 
      3 RETURN
        4 [Boolean Constant: true] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: quicksort] 
        4 [Type: int[]] 
        4 [ID: L] 
      3 RETURN
        4 THIS
          5 SELECTOR
            6 [ID: quicksort] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: L] 
              7 [Int Constant: 0] 
              7 SUB
                8 IdentifierAccess
                  9 [ID: L] 
                  9 SELECTOR
                    10 LENGTH
                8 [Int Constant: 1] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: quicksort] 
        4 [Type: int[]] 
        4 [ID: L] 
        4 [Type: int] 
        4 [ID: lo] 
        4 [Type: int] 
        4 [ID: hi] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: p] 
      3 IfStructure
        4 IfHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: lo] 
            6 IdentifierAccess
              7 [ID: hi] 
        4 Attribution
          5 Target
            6 [ID: p] 
          5 THIS
            6 SELECTOR
              7 [ID: partition] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                8 IdentifierAccess
                  9 [ID: lo] 
                8 IdentifierAccess
                  9 [ID: hi] 
        4 DIRECTEXPRESSION
          5 THIS
            6 SELECTOR
              7 [ID: quicksort] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                8 IdentifierAccess
                  9 [ID: lo] 
                8 SUB
                  9 IdentifierAccess
                    10 [ID: p] 
                  9 [Int Constant: 1] 
        4 DIRECTEXPRESSION
          5 THIS
            6 SELECTOR
              7 [ID: quicksort] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                8 ADD
                  9 IdentifierAccess
                    10 [ID: p] 
                  9 [Int Constant: 1] 
                8 IdentifierAccess
                  9 [ID: hi] 
        4 ElseStructure
      3 RETURN
        4 [Boolean Constant: true] 
    2 NormalMethod
      3 MethodHead
        4 [Type: int] 
        4 [ID: partition] 
        4 [Type: int[]] 
        4 [ID: L] 
        4 [Type: int] 
        4 [ID: lo] 
        4 [Type: int] 
        4 [ID: hi] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: p] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: j] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: tmp] 
      3 Attribution
        4 Target
          5 [ID: p] 
        4 IdentifierAccess
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: hi] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 IdentifierAccess
          5 [ID: lo] 
      3 Attribution
        4 Target
          5 [ID: j] 
        4 IdentifierAccess
          5 [ID: lo] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: j] 
            6 IdentifierAccess
              7 [ID: hi] 
        4 IfStructure
          5 IfHead
            6 LESSTHAN
              7 IdentifierAccess
                8 [ID: L] 
                8 ArrayAccess
                  9 IdentifierAccess
                    10 [ID: j] 
              7 IdentifierAccess
                8 [ID: p] 
          5 Attribution
            6 Target
              7 [ID: tmp] 
            6 IdentifierAccess
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: i] 
          5 Attribution
            6 Target
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: i] 
            6 IdentifierAccess
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: j] 
          5 Attribution
            6 Target
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: j] 
            6 IdentifierAccess
              7 [ID: tmp] 
          5 Attribution
            6 Target
              7 [ID: i] 
            6 ADD
              7 IdentifierAccess
                8 [ID: i] 
              7 [Int Constant: 1] 
          5 ElseStructure
        4 Attribution
          5 Target
            6 [ID: j] 
          5 ADD
            6 IdentifierAccess
              7 [ID: j] 
            6 [Int Constant: 1] 
      3 Attribution
        4 Target
          5 [ID: tmp] 
        4 IdentifierAccess
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: i] 
      3 Attribution
        4 Target
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: i] 
        4 IdentifierAccess
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: hi] 
      3 Attribution
        4 Target
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: hi] 
        4 IdentifierAccess
          5 [ID: tmp] 
      3 RETURN
        4 IdentifierAccess
          5 [ID: i] 
0 START
  1 ImportDeclaration
    2 STATIC
    2 [ID: io] 
    2 [ID: println] 
    2 IMPORTMETHOD
    2 [Type: int] 
  1 ClassDeclaration
    2 ClassHead
      3 [ID: Quicksort] 
    2 MainMethod
      3 [ID: a] 
      3 VarDeclaration
        4 [Type: int[]] 
        4 [ID: L] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 VarDeclaration
        4 [Type: Quicksort] 
        4 [ID: q] 
      3 Attribution
        4 Target
          5 [ID: L] 
        4 New
          5 [Int Constant: 10] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: i] 
            6 IdentifierAccess
              7 [ID: L] 
              7 SELECTOR
                8 LENGTH
        4 Attribution
          5 Target
            6 [ID: L] 
            6 ArrayAccess
              7 IdentifierAccess
                8 [ID: i] 
          5 SUB
            6 IdentifierAccess
              7 [ID: L] 
              7 SELECTOR
                8 LENGTH
            6 IdentifierAccess
              7 [ID: i] 
        4 Attribution
          5 Target
            6 [ID: i] 
          5 ADD
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 1] 
      3 Attribution
        4 Target
          5 [ID: q] 
        4 New
          5 [ID: Quicksort] 
          5 SelectorArguments
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: q] 
          5 SELECTOR
            6 [ID: quicksort] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: L] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: q] 
          5 SELECTOR
            6 [ID: printL] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: L] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: printL] 
        4 [Type: int[]] 
        4 [ID: L] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: i] 
            6 IdentifierAccess
              7 [ID: L] 
              7 SELECTOR
                8 LENGTH
        4 DIRECTEXPRESSION
          5 IdentifierAccess
            6 [ID: io] 
            6 SELECTOR
              7 [ID: println] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                  9 ArrayAccess
                    10 IdentifierAccess
                      11 [ID: i] 
        4 Attribution
          5 Target
            6 [ID: i] 
          5 ADD
            6 IdentifierAccess
              7 [ID: i] 
            6 [Int Constant: 1] 
      3 RETURN
        4 [Boolean Constant: true] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: quicksort] 
        4 [Type: int[]] 
        4 [ID: L] 
      3 RETURN
        4 THIS
          5 SELECTOR
            6 [ID: quicksort] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: L] 
              7 [Int Constant: 0] 
              7 SUB
                8 IdentifierAccess
                  9 [ID: L] 
                  9 SELECTOR
                    10 LENGTH
                8 [Int Constant: 1] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: quicksort] 
        4 [Type: int[]] 
        4 [ID: L] 
        4 [Type: int] 
        4 [ID: lo] 
        4 [Type: int] 
        4 [ID: hi] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: p] 
      3 IfStructure
        4 IfHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: lo] 
            6 IdentifierAccess
              7 [ID: hi] 
        4 Attribution
          5 Target
            6 [ID: p] 
          5 THIS
            6 SELECTOR
              7 [ID: partition] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                8 IdentifierAccess
                  9 [ID: lo] 
                8 IdentifierAccess
                  9 [ID: hi] 
        4 DIRECTEXPRESSION
          5 THIS
            6 SELECTOR
              7 [ID: quicksort] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                8 IdentifierAccess
                  9 [ID: lo] 
                8 SUB
                  9 IdentifierAccess
                    10 [ID: p] 
                  9 [Int Constant: 1] 
        4 DIRECTEXPRESSION
          5 THIS
            6 SELECTOR
              7 [ID: quicksort] 
              7 SelectorArguments
                8 IdentifierAccess
                  9 [ID: L] 
                8 ADD
                  9 IdentifierAccess
                    10 [ID: p] 
                  9 [Int Constant: 1] 
                8 IdentifierAccess
                  9 [ID: hi] 
        4 ElseStructure
      3 RETURN
        4 [Boolean Constant: true] 
    2 NormalMethod
      3 MethodHead
        4 [Type: int] 
        4 [ID: partition] 
        4 [Type: int[]] 
        4 [ID: L] 
        4 [Type: int] 
        4 [ID: lo] 
        4 [Type: int] 
        4 [ID: hi] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: p] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: i] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: j] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: tmp] 
      3 Attribution
        4 Target
          5 [ID: p] 
        4 IdentifierAccess
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: hi] 
      3 Attribution
        4 Target
          5 [ID: i] 
        4 IdentifierAccess
          5 [ID: lo] 
      3 Attribution
        4 Target
          5 [ID: j] 
        4 IdentifierAccess
          5 [ID: lo] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: j] 
            6 IdentifierAccess
              7 [ID: hi] 
        4 IfStructure
          5 IfHead
            6 LESSTHAN
              7 IdentifierAccess
                8 [ID: L] 
                8 ArrayAccess
                  9 IdentifierAccess
                    10 [ID: j] 
              7 IdentifierAccess
                8 [ID: p] 
          5 Attribution
            6 Target
              7 [ID: tmp] 
            6 IdentifierAccess
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: i] 
          5 Attribution
            6 Target
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: i] 
            6 IdentifierAccess
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: j] 
          5 Attribution
            6 Target
              7 [ID: L] 
              7 ArrayAccess
                8 IdentifierAccess
                  9 [ID: j] 
            6 IdentifierAccess
              7 [ID: tmp] 
          5 Attribution
            6 Target
              7 [ID: i] 
            6 ADD
              7 IdentifierAccess
                8 [ID: i] 
              7 [Int Constant: 1] 
          5 ElseStructure
        4 Attribution
          5 Target
            6 [ID: j] 
          5 ADD
            6 IdentifierAccess
              7 [ID: j] 
            6 [Int Constant: 1] 
      3 Attribution
        4 Target
          5 [ID: tmp] 
        4 IdentifierAccess
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: i] 
      3 Attribution
        4 Target
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: i] 
        4 IdentifierAccess
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: hi] 
      3 Attribution
        4 Target
          5 [ID: L] 
          5 ArrayAccess
            6 IdentifierAccess
              7 [ID: hi] 
        4 IdentifierAccess
          5 [ID: tmp] 
      3 RETURN
        4 IdentifierAccess
          5 [ID: i] 
Analyzer starting on ./test/fixtures/public/QuickSort.jmm
Node Depth 0
Node Symbol: 
Symbol 
	Name root
	Type 5
	Signature null

Nmb children 2
Symbol Table: 
Symbol 
	Name io
	Type 0
	Signature io

Symbol 
	Name io
	Type 1
	Signature io()

Symbol 
	Name Quicksort
	Type 1
	Signature Quicksort()

Symbol 
	Name Quicksort
	Type 0
	Signature Quicksort

Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name io
	Type 0
	Signature io

Nmb children 1
Symbol Table: 
Symbol 
	Name println
	Type 2
	Signature println(int)

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name println
	Type 2
	Signature println(int)

Nmb children 0
Symbol Table: 
Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name Quicksort
	Type 0
	Signature Quicksort

Nmb children 5
Symbol Table: 
Symbol 
	Name main
	Type 2
	Signature main(String[])

Symbol 
	Name printL
	Type 1
	Signature printL(int[])

Symbol 
	Name quicksort
	Type 1
	Signature quicksort(int[])

Symbol 
	Name quicksort
	Type 1
	Signature quicksort(int[],int,int)

Symbol 
	Name partition
	Type 1
	Signature partition(int[],int,int)

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name main
	Type 2
	Signature main(String[])

Nmb children 0
Symbol Table: 
Symbol 
	Name a
	Type 4
	Signature a

Symbol 
	Name L
	Type 4
	Signature L

Symbol 
	Name i
	Type 4
	Signature i

Symbol 
	Name q
	Type 4
	Signature q

Structures (6): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol L return type int[]
    Structure Type: Expression: INT ARRAY return type int[]
     Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: WHILE
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: ACCESS Symbol L return type int
      Structure Type: Expression: LENGTH return type int
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol L return type int
     Structure Type: Expression: ARRAY ACCESS return type int
      Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: SUB return type int
      Structure Type: Expression: ACCESS Symbol L return type int
       Structure Type: Expression: LENGTH return type int
      Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: ADD return type int
      Structure Type: Expression: ACCESS Symbol i return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol q return type Quicksort
    Structure Type: Expression: NEW METHOD ACCESS Symbol Quicksort() return type Quicksort
   Structure Type: Expression: ACCESS Symbol q return type boolean
    Structure Type: Expression: METHOD ACCESS Symbol quicksort(int[]) return type boolean
     Structure Type: Expression: ACCESS Symbol L return type int[]
   Structure Type: Expression: ACCESS Symbol q return type boolean
    Structure Type: Expression: METHOD ACCESS Symbol printL(int[]) return type boolean
     Structure Type: Expression: ACCESS Symbol L return type int[]



Node Depth 2
Node Symbol: 
Symbol 
	Name printL
	Type 1
	Signature printL(int[])

Nmb children 0
Symbol Table: 
Symbol 
	Name L
	Type 4
	Signature L

Symbol 
	Name i
	Type 4
	Signature i

Structures (3): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: WHILE
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: ACCESS Symbol L return type int
      Structure Type: Expression: LENGTH return type int
    Structure Type: Expression: ACCESS Symbol io return type void
     Structure Type: Expression: METHOD ACCESS Symbol println(int) return type void
      Structure Type: Expression: ACCESS Symbol L return type int
       Structure Type: Expression: ARRAY ACCESS return type int
        Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: Expression: ADD return type int
      Structure Type: Expression: ACCESS Symbol i return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: Expression: RETURN return type boolean
    Structure Type: Expression: CONSTANT return type boolean



Node Depth 2
Node Symbol: 
Symbol 
	Name quicksort
	Type 1
	Signature quicksort(int[])

Nmb children 0
Symbol Table: 
Symbol 
	Name L
	Type 4
	Signature L

Structures (1): 
   Structure Type: Expression: RETURN return type boolean
    Structure Type: Expression: ACCESS return type boolean
     Structure Type: Expression: METHOD ACCESS Symbol quicksort(int[],int,int) return type boolean
      Structure Type: Expression: ACCESS Symbol L return type int[]
      Structure Type: Expression: CONSTANT return type int
      Structure Type: Expression: SUB return type int
       Structure Type: Expression: ACCESS Symbol L return type int
        Structure Type: Expression: LENGTH return type int
       Structure Type: Expression: CONSTANT return type int



Node Depth 2
Node Symbol: 
Symbol 
	Name quicksort
	Type 1
	Signature quicksort(int[],int,int)

Nmb children 0
Symbol Table: 
Symbol 
	Name L
	Type 4
	Signature L

Symbol 
	Name lo
	Type 4
	Signature lo

Symbol 
	Name hi
	Type 4
	Signature hi

Symbol 
	Name p
	Type 4
	Signature p

Structures (2): 
   Structure Type: IF
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol lo return type int
     Structure Type: Expression: ACCESS Symbol hi return type int
   IF BODY
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol p return type int
     Structure Type: Expression: ACCESS return type int
      Structure Type: Expression: METHOD ACCESS Symbol partition(int[],int,int) return type int
       Structure Type: Expression: ACCESS Symbol L return type int[]
       Structure Type: Expression: ACCESS Symbol lo return type int
       Structure Type: Expression: ACCESS Symbol hi return type int
    Structure Type: Expression: ACCESS return type boolean
     Structure Type: Expression: METHOD ACCESS Symbol quicksort(int[],int,int) return type boolean
      Structure Type: Expression: ACCESS Symbol L return type int[]
      Structure Type: Expression: ACCESS Symbol lo return type int
      Structure Type: Expression: SUB return type int
       Structure Type: Expression: ACCESS Symbol p return type int
       Structure Type: Expression: CONSTANT return type int
    Structure Type: Expression: ACCESS return type boolean
     Structure Type: Expression: METHOD ACCESS Symbol quicksort(int[],int,int) return type boolean
      Structure Type: Expression: ACCESS Symbol L return type int[]
      Structure Type: Expression: ADD return type int
       Structure Type: Expression: ACCESS Symbol p return type int
       Structure Type: Expression: CONSTANT return type int
      Structure Type: Expression: ACCESS Symbol hi return type int
   ELSE BODY
   Structure Type: Expression: RETURN return type boolean
    Structure Type: Expression: CONSTANT return type boolean



Node Depth 2
Node Symbol: 
Symbol 
	Name partition
	Type 1
	Signature partition(int[],int,int)

Nmb children 0
Symbol Table: 
Symbol 
	Name L
	Type 4
	Signature L

Symbol 
	Name lo
	Type 4
	Signature lo

Symbol 
	Name hi
	Type 4
	Signature hi

Symbol 
	Name p
	Type 4
	Signature p

Symbol 
	Name i
	Type 4
	Signature i

Symbol 
	Name j
	Type 4
	Signature j

Symbol 
	Name tmp
	Type 4
	Signature tmp

Structures (8): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol p return type int
    Structure Type: Expression: ACCESS Symbol L return type int
     Structure Type: Expression: ARRAY ACCESS return type int
      Structure Type: Expression: ACCESS Symbol hi return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: Expression: ACCESS Symbol lo return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol j return type int
    Structure Type: Expression: ACCESS Symbol lo return type int
   Structure Type: WHILE
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol j return type int
     Structure Type: Expression: ACCESS Symbol hi return type int
    Structure Type: IF
     Structure Type: Expression: LESSTHAN return type boolean
      Structure Type: Expression: ACCESS Symbol L return type int
       Structure Type: Expression: ARRAY ACCESS return type int
        Structure Type: Expression: ACCESS Symbol j return type int
      Structure Type: Expression: ACCESS Symbol p return type int
    IF BODY
     Structure Type: ATTRIBUTION
      Structure Type: Expression: ACCESS Symbol tmp return type int
      Structure Type: Expression: ACCESS Symbol L return type int
       Structure Type: Expression: ARRAY ACCESS return type int
        Structure Type: Expression: ACCESS Symbol i return type int
     Structure Type: ATTRIBUTION
      Structure Type: Expression: ACCESS Symbol L return type int
      Structure Type: Expression: ARRAY ACCESS return type int
       Structure Type: Expression: ACCESS Symbol i return type int
      Structure Type: Expression: ACCESS Symbol L return type int
       Structure Type: Expression: ARRAY ACCESS return type int
        Structure Type: Expression: ACCESS Symbol j return type int
     Structure Type: ATTRIBUTION
      Structure Type: Expression: ACCESS Symbol L return type int
      Structure Type: Expression: ARRAY ACCESS return type int
       Structure Type: Expression: ACCESS Symbol j return type int
      Structure Type: Expression: ACCESS Symbol tmp return type int
     Structure Type: ATTRIBUTION
      Structure Type: Expression: ACCESS Symbol i return type int
      Structure Type: Expression: ADD return type int
       Structure Type: Expression: ACCESS Symbol i return type int
       Structure Type: Expression: CONSTANT return type int
    ELSE BODY
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol j return type int
     Structure Type: Expression: ADD return type int
      Structure Type: Expression: ACCESS Symbol j return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol tmp return type int
    Structure Type: Expression: ACCESS Symbol L return type int
     Structure Type: Expression: ARRAY ACCESS return type int
      Structure Type: Expression: ACCESS Symbol i return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol L return type int
    Structure Type: Expression: ARRAY ACCESS return type int
     Structure Type: Expression: ACCESS Symbol i return type int
    Structure Type: Expression: ACCESS Symbol L return type int
     Structure Type: Expression: ARRAY ACCESS return type int
      Structure Type: Expression: ACCESS Symbol hi return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol L return type int
    Structure Type: Expression: ARRAY ACCESS return type int
     Structure Type: Expression: ACCESS Symbol hi return type int
    Structure Type: Expression: ACCESS Symbol tmp return type int
   Structure Type: Expression: RETURN Symbol i return type int
    Structure Type: Expression: ACCESS Symbol i return type int




.class public Quicksort
.super java/lang/Object
.method <init>()V
aload_0
invokenonvirtual java/lang/Object/<init>()V
return
.end method
; println/io
.method public static main([Ljava/lang/String;)V
.limit stack 99
.limit locals 6
; 12
; 7
bipush 10
newarray int
astore_2		;L


; 7
iconst_0
istore_3		;i


while_0:
; 8
iload_3		;i
; 8
aload_2		;L
arraylength
if_icmpge else_0

aload_2		;L
; 8
iload_3		;i
; 6
; 8
aload_2		;L
arraylength
; 8
iload_3		;i
isub
iastore

; 3
; 8
iload_3		;i
; 7
iconst_1
iadd
istore_3		;i

goto while_0
else_0:


; 10
new Quicksort
dup
invokespecial Quicksort/<init>()V
astore 4		;q


; 8
aload 4		;q
; 8
aload_2		;L
; 10
invokevirtual Quicksort/quicksort([I)Z
pop


; 8
aload 4		;q
; 8
aload_2		;L
; 10
invokevirtual Quicksort/printL([I)Z
pop


return
.end method
.method public printL([I)Z
.limit stack 99
.limit locals 4
; 7
iconst_0
istore_2		;i


while_1:
; 8
iload_2		;i
; 8
aload_1		;L
arraylength
if_icmpge else_1

; 8
; 8
aload_1		;L
; 8
iload_2		;i
iaload
; 10
invokestatic io/println(I)V

; 3
; 8
iload_2		;i
; 7
iconst_1
iadd
istore_2		;i

goto while_1
else_1:


; 13
; 7
iconst_1
ireturn


.end method
.method public quicksort([I)Z
.limit stack 99
.limit locals 3
; 13
; 8
aload_0
; 8
aload_1		;L
; 7
iconst_0
; 6
; 8
aload_1		;L
arraylength
; 7
iconst_1
isub
; 10
invokevirtual Quicksort/quicksort([III)Z
ireturn


.end method
.method public quicksort([III)Z
.limit stack 99
.limit locals 8
; 8
iload_2		;lo
; 8
iload_3		;hi
if_icmpge else_2
; 8
aload_0
; 8
aload_1		;L
; 8
iload_2		;lo
; 8
iload_3		;hi
; 10
invokevirtual Quicksort/partition([III)I
istore 4		;p

; 8
aload_0
; 8
aload_1		;L
; 8
iload_2		;lo
; 6
; 8
iload 4		;p
; 7
iconst_1
isub
; 10
invokevirtual Quicksort/quicksort([III)Z
pop

; 8
aload_0
; 8
aload_1		;L
; 3
; 8
iload 4		;p
; 7
iconst_1
iadd
; 8
iload_3		;hi
; 10
invokevirtual Quicksort/quicksort([III)Z
pop

goto endif_2
else_2:
; 0
endif_2:


; 13
; 7
iconst_1
ireturn


.end method
.method public partition([III)I
.limit stack 99
.limit locals 11
; 8
aload_1		;L
; 8
iload_3		;hi
iaload
istore 4		;p


; 8
iload_2		;lo
istore 5		;i


; 8
iload_2		;lo
istore 6		;j


while_3:
; 8
iload 6		;j
; 8
iload_3		;hi
if_icmpge else_3

; 8
aload_1		;L
; 8
iload 6		;j
iaload
; 8
iload 4		;p
if_icmpge else_4
; 8
aload_1		;L
; 8
iload 5		;i
iaload
istore 7		;tmp

aload_1		;L
; 8
iload 5		;i
; 8
aload_1		;L
; 8
iload 6		;j
iaload
iastore

aload_1		;L
; 8
iload 6		;j
; 8
iload 7		;tmp
iastore

; 3
; 8
iload 5		;i
; 7
iconst_1
iadd
istore 5		;i

goto endif_4
else_4:
; 0
endif_4:

; 3
; 8
iload 6		;j
; 7
iconst_1
iadd
istore 6		;j

goto while_3
else_3:


; 8
aload_1		;L
; 8
iload 5		;i
iaload
istore 7		;tmp


aload_1		;L
; 8
iload 5		;i
; 8
aload_1		;L
; 8
iload_3		;hi
iaload
iastore


aload_1		;L
; 8
iload_3		;hi
; 8
iload 7		;tmp
iastore


; 13
; 8
iload 5		;i
ireturn


.end method

COMPILATION SUCCESSFUL
