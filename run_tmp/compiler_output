Parsing file ./test/fixtures/public/MonteCarloPi.jmm
Parser starting
0 START
  1 ImportDeclaration
    2 STATIC
    2 [ID: MathUtils] 
    2 [ID: random] 
    2 IMPORTMETHOD
    2 [Type: int] 
    2 [Type: int] 
    2 RETURN
      3 [Type: int] 
  1 ImportDeclaration
    2 STATIC
    2 [ID: ioPlus] 
    2 [ID: requestNumber] 
    2 IMPORTMETHOD
    2 RETURN
      3 [Type: int] 
  1 ImportDeclaration
    2 STATIC
    2 [ID: ioPlus] 
    2 [ID: printResult] 
    2 IMPORTMETHOD
    2 [Type: int] 
  1 ClassDeclaration
    2 ClassHead
      3 [ID: MonteCarloPi] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: performSingleEstimate] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: rand1] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: rand2] 
      3 VarDeclaration
        4 [Type: boolean] 
        4 [ID: in_circle] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: squareDist] 
      3 Attribution
        4 Target
          5 [ID: rand1] 
        4 IdentifierAccess
          5 [ID: MathUtils] 
          5 SELECTOR
            6 [ID: random] 
            6 SelectorArguments
              7 SUB
                8 [Int Constant: 0] 
                8 [Int Constant: 100] 
              7 [Int Constant: 100] 
      3 Attribution
        4 Target
          5 [ID: rand2] 
        4 IdentifierAccess
          5 [ID: MathUtils] 
          5 SELECTOR
            6 [ID: random] 
            6 SelectorArguments
              7 SUB
                8 [Int Constant: 0] 
                8 [Int Constant: 100] 
              7 [Int Constant: 100] 
      3 Attribution
        4 Target
          5 [ID: squareDist] 
        4 DIV
          5 ADD
            6 MUL
              7 IdentifierAccess
                8 [ID: rand1] 
              7 IdentifierAccess
                8 [ID: rand1] 
            6 MUL
              7 IdentifierAccess
                8 [ID: rand2] 
              7 IdentifierAccess
                8 [ID: rand2] 
          5 [Int Constant: 100] 
      3 IfStructure
        4 IfHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: squareDist] 
            6 [Int Constant: 100] 
        4 Attribution
          5 Target
            6 [ID: in_circle] 
          5 [Boolean Constant: true] 
        4 ElseStructure
          5 Attribution
            6 Target
              7 [ID: in_circle] 
            6 [Boolean Constant: false] 
      3 RETURN
        4 IdentifierAccess
          5 [ID: in_circle] 
    2 NormalMethod
      3 MethodHead
        4 [Type: int] 
        4 [ID: estimatePi100] 
        4 [Type: int] 
        4 [ID: n] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: samples_in_circle] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: samples_so_far] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: pi_estimate] 
      3 Attribution
        4 Target
          5 [ID: samples_so_far] 
        4 [Int Constant: 0] 
      3 Attribution
        4 Target
          5 [ID: samples_in_circle] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: samples_so_far] 
            6 IdentifierAccess
              7 [ID: n] 
        4 IfStructure
          5 IfHead
            6 THIS
              7 SELECTOR
                8 [ID: performSingleEstimate] 
                8 SelectorArguments
          5 Attribution
            6 Target
              7 [ID: samples_in_circle] 
            6 ADD
              7 IdentifierAccess
                8 [ID: samples_in_circle] 
              7 [Int Constant: 1] 
          5 ElseStructure
        4 Attribution
          5 Target
            6 [ID: samples_so_far] 
          5 ADD
            6 IdentifierAccess
              7 [ID: samples_so_far] 
            6 [Int Constant: 1] 
      3 Attribution
        4 Target
          5 [ID: pi_estimate] 
        4 DIV
          5 MUL
            6 [Int Constant: 400] 
            6 IdentifierAccess
              7 [ID: samples_in_circle] 
          5 IdentifierAccess
            6 [ID: n] 
      3 RETURN
        4 IdentifierAccess
          5 [ID: pi_estimate] 
    2 MainMethod
      3 [ID: args] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: pi_estimate_times_100] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: num_samples] 
      3 Attribution
        4 Target
          5 [ID: num_samples] 
        4 IdentifierAccess
          5 [ID: ioPlus] 
          5 SELECTOR
            6 [ID: requestNumber] 
            6 SelectorArguments
      3 Attribution
        4 Target
          5 [ID: pi_estimate_times_100] 
        4 New
          5 [ID: MonteCarloPi] 
          5 SelectorArguments
          5 SELECTOR
            6 [ID: estimatePi100] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: num_samples] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: ioPlus] 
          5 SELECTOR
            6 [ID: printResult] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: pi_estimate_times_100] 
0 START
  1 ImportDeclaration
    2 STATIC
    2 [ID: MathUtils] 
    2 [ID: random] 
    2 IMPORTMETHOD
    2 [Type: int] 
    2 [Type: int] 
    2 RETURN
      3 [Type: int] 
  1 ImportDeclaration
    2 STATIC
    2 [ID: ioPlus] 
    2 [ID: requestNumber] 
    2 IMPORTMETHOD
    2 RETURN
      3 [Type: int] 
  1 ImportDeclaration
    2 STATIC
    2 [ID: ioPlus] 
    2 [ID: printResult] 
    2 IMPORTMETHOD
    2 [Type: int] 
  1 ClassDeclaration
    2 ClassHead
      3 [ID: MonteCarloPi] 
    2 NormalMethod
      3 MethodHead
        4 [Type: boolean] 
        4 [ID: performSingleEstimate] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: rand1] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: rand2] 
      3 VarDeclaration
        4 [Type: boolean] 
        4 [ID: in_circle] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: squareDist] 
      3 Attribution
        4 Target
          5 [ID: rand1] 
        4 IdentifierAccess
          5 [ID: MathUtils] 
          5 SELECTOR
            6 [ID: random] 
            6 SelectorArguments
              7 SUB
                8 [Int Constant: 0] 
                8 [Int Constant: 100] 
              7 [Int Constant: 100] 
      3 Attribution
        4 Target
          5 [ID: rand2] 
        4 IdentifierAccess
          5 [ID: MathUtils] 
          5 SELECTOR
            6 [ID: random] 
            6 SelectorArguments
              7 SUB
                8 [Int Constant: 0] 
                8 [Int Constant: 100] 
              7 [Int Constant: 100] 
      3 Attribution
        4 Target
          5 [ID: squareDist] 
        4 DIV
          5 ADD
            6 MUL
              7 IdentifierAccess
                8 [ID: rand1] 
              7 IdentifierAccess
                8 [ID: rand1] 
            6 MUL
              7 IdentifierAccess
                8 [ID: rand2] 
              7 IdentifierAccess
                8 [ID: rand2] 
          5 [Int Constant: 100] 
      3 IfStructure
        4 IfHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: squareDist] 
            6 [Int Constant: 100] 
        4 Attribution
          5 Target
            6 [ID: in_circle] 
          5 [Boolean Constant: true] 
        4 ElseStructure
          5 Attribution
            6 Target
              7 [ID: in_circle] 
            6 [Boolean Constant: false] 
      3 RETURN
        4 IdentifierAccess
          5 [ID: in_circle] 
    2 NormalMethod
      3 MethodHead
        4 [Type: int] 
        4 [ID: estimatePi100] 
        4 [Type: int] 
        4 [ID: n] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: samples_in_circle] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: samples_so_far] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: pi_estimate] 
      3 Attribution
        4 Target
          5 [ID: samples_so_far] 
        4 [Int Constant: 0] 
      3 Attribution
        4 Target
          5 [ID: samples_in_circle] 
        4 [Int Constant: 0] 
      3 WhileStructure
        4 WhileHead
          5 LESSTHAN
            6 IdentifierAccess
              7 [ID: samples_so_far] 
            6 IdentifierAccess
              7 [ID: n] 
        4 IfStructure
          5 IfHead
            6 THIS
              7 SELECTOR
                8 [ID: performSingleEstimate] 
                8 SelectorArguments
          5 Attribution
            6 Target
              7 [ID: samples_in_circle] 
            6 ADD
              7 IdentifierAccess
                8 [ID: samples_in_circle] 
              7 [Int Constant: 1] 
          5 ElseStructure
        4 Attribution
          5 Target
            6 [ID: samples_so_far] 
          5 ADD
            6 IdentifierAccess
              7 [ID: samples_so_far] 
            6 [Int Constant: 1] 
      3 Attribution
        4 Target
          5 [ID: pi_estimate] 
        4 DIV
          5 MUL
            6 [Int Constant: 400] 
            6 IdentifierAccess
              7 [ID: samples_in_circle] 
          5 IdentifierAccess
            6 [ID: n] 
      3 RETURN
        4 IdentifierAccess
          5 [ID: pi_estimate] 
    2 MainMethod
      3 [ID: args] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: pi_estimate_times_100] 
      3 VarDeclaration
        4 [Type: int] 
        4 [ID: num_samples] 
      3 Attribution
        4 Target
          5 [ID: num_samples] 
        4 IdentifierAccess
          5 [ID: ioPlus] 
          5 SELECTOR
            6 [ID: requestNumber] 
            6 SelectorArguments
      3 Attribution
        4 Target
          5 [ID: pi_estimate_times_100] 
        4 New
          5 [ID: MonteCarloPi] 
          5 SelectorArguments
          5 SELECTOR
            6 [ID: estimatePi100] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: num_samples] 
      3 DIRECTEXPRESSION
        4 IdentifierAccess
          5 [ID: ioPlus] 
          5 SELECTOR
            6 [ID: printResult] 
            6 SelectorArguments
              7 IdentifierAccess
                8 [ID: pi_estimate_times_100] 
Analyzer starting on ./test/fixtures/public/MonteCarloPi.jmm

"import""static"<ID>"."<ID>"(""int"")""void"

"import""static"<ID>"."<ID>"(""int"")""void"
Node Depth 0
Node Symbol: 
Symbol 
	Name root
	Type 5
	Signature null

Nmb children 3
Symbol Table: 
Symbol 
	Name MathUtils
	Type 0
	Signature MathUtils

Symbol 
	Name MathUtils
	Type 1
	Signature MathUtils()

Symbol 
	Name ioPlus
	Type 0
	Signature ioPlus

Symbol 
	Name ioPlus
	Type 1
	Signature ioPlus()

Symbol 
	Name MonteCarloPi
	Type 1
	Signature MonteCarloPi()

Symbol 
	Name MonteCarloPi
	Type 0
	Signature MonteCarloPi

Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name MathUtils
	Type 0
	Signature MathUtils

Nmb children 1
Symbol Table: 
Symbol 
	Name random
	Type 2
	Signature random(int,int)

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name random
	Type 2
	Signature random(int,int)

Nmb children 0
Symbol Table: 
Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name ioPlus
	Type 0
	Signature ioPlus

Nmb children 2
Symbol Table: 
Symbol 
	Name requestNumber
	Type 2
	Signature requestNumber()

Symbol 
	Name printResult
	Type 2
	Signature printResult(int)

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name requestNumber
	Type 2
	Signature requestNumber()

Nmb children 0
Symbol Table: 
Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name printResult
	Type 2
	Signature printResult(int)

Nmb children 0
Symbol Table: 
Structures (0): 



Node Depth 1
Node Symbol: 
Symbol 
	Name MonteCarloPi
	Type 0
	Signature MonteCarloPi

Nmb children 3
Symbol Table: 
Symbol 
	Name performSingleEstimate
	Type 1
	Signature performSingleEstimate()

Symbol 
	Name estimatePi100
	Type 1
	Signature estimatePi100(int)

Symbol 
	Name main
	Type 2
	Signature main(String[])

Structures (0): 



Node Depth 2
Node Symbol: 
Symbol 
	Name performSingleEstimate
	Type 1
	Signature performSingleEstimate()

Nmb children 0
Symbol Table: 
Symbol 
	Name rand1
	Type 4
	Signature rand1

Symbol 
	Name rand2
	Type 4
	Signature rand2

Symbol 
	Name in_circle
	Type 4
	Signature in_circle

Symbol 
	Name squareDist
	Type 4
	Signature squareDist

Structures (5): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol rand1 return type int
    Structure Type: Expression: ACCESS Symbol MathUtils return type int
     Structure Type: Expression: METHOD ACCESS Symbol random(int,int) return type int
      Structure Type: Expression: SUB return type int
       Structure Type: Expression: CONSTANT return type int
       Structure Type: Expression: CONSTANT return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol rand2 return type int
    Structure Type: Expression: ACCESS Symbol MathUtils return type int
     Structure Type: Expression: METHOD ACCESS Symbol random(int,int) return type int
      Structure Type: Expression: SUB return type int
       Structure Type: Expression: CONSTANT return type int
       Structure Type: Expression: CONSTANT return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol squareDist return type int
    Structure Type: Expression: DIV return type int
     Structure Type: Expression: ADD return type int
      Structure Type: Expression: MUL return type int
       Structure Type: Expression: ACCESS Symbol rand1 return type int
       Structure Type: Expression: ACCESS Symbol rand1 return type int
      Structure Type: Expression: MUL return type int
       Structure Type: Expression: ACCESS Symbol rand2 return type int
       Structure Type: Expression: ACCESS Symbol rand2 return type int
     Structure Type: Expression: CONSTANT return type int
   Structure Type: IF
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol squareDist return type int
     Structure Type: Expression: CONSTANT return type int
   IF BODY
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol in_circle return type boolean
     Structure Type: Expression: CONSTANT return type boolean
   ELSE BODY
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol in_circle return type boolean
     Structure Type: Expression: CONSTANT return type boolean
   Structure Type: Expression: RETURN Symbol in_circle return type boolean
    Structure Type: Expression: ACCESS Symbol in_circle return type boolean



Node Depth 2
Node Symbol: 
Symbol 
	Name estimatePi100
	Type 1
	Signature estimatePi100(int)

Nmb children 0
Symbol Table: 
Symbol 
	Name n
	Type 4
	Signature n

Symbol 
	Name samples_in_circle
	Type 4
	Signature samples_in_circle

Symbol 
	Name samples_so_far
	Type 4
	Signature samples_so_far

Symbol 
	Name pi_estimate
	Type 4
	Signature pi_estimate

Structures (5): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol samples_so_far return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol samples_in_circle return type int
    Structure Type: Expression: CONSTANT return type int
   Structure Type: WHILE
    Structure Type: Expression: LESSTHAN return type boolean
     Structure Type: Expression: ACCESS Symbol samples_so_far return type int
     Structure Type: Expression: ACCESS Symbol n return type int
    Structure Type: IF
     Structure Type: Expression: ACCESS return type boolean
      Structure Type: Expression: METHOD ACCESS Symbol performSingleEstimate() return type boolean
    IF BODY
     Structure Type: ATTRIBUTION
      Structure Type: Expression: ACCESS Symbol samples_in_circle return type int
      Structure Type: Expression: ADD return type int
       Structure Type: Expression: ACCESS Symbol samples_in_circle return type int
       Structure Type: Expression: CONSTANT return type int
    ELSE BODY
    Structure Type: ATTRIBUTION
     Structure Type: Expression: ACCESS Symbol samples_so_far return type int
     Structure Type: Expression: ADD return type int
      Structure Type: Expression: ACCESS Symbol samples_so_far return type int
      Structure Type: Expression: CONSTANT return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol pi_estimate return type int
    Structure Type: Expression: DIV return type int
     Structure Type: Expression: MUL return type int
      Structure Type: Expression: CONSTANT return type int
      Structure Type: Expression: ACCESS Symbol samples_in_circle return type int
     Structure Type: Expression: ACCESS Symbol n return type int
   Structure Type: Expression: RETURN Symbol pi_estimate return type int
    Structure Type: Expression: ACCESS Symbol pi_estimate return type int



Node Depth 2
Node Symbol: 
Symbol 
	Name main
	Type 2
	Signature main(String[])

Nmb children 0
Symbol Table: 
Symbol 
	Name args
	Type 4
	Signature args

Symbol 
	Name pi_estimate_times_100
	Type 4
	Signature pi_estimate_times_100

Symbol 
	Name num_samples
	Type 4
	Signature num_samples

Structures (3): 
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol num_samples return type int
    Structure Type: Expression: ACCESS Symbol ioPlus return type int
     Structure Type: Expression: METHOD ACCESS Symbol requestNumber() return type int
   Structure Type: ATTRIBUTION
    Structure Type: Expression: ACCESS Symbol pi_estimate_times_100 return type int
    Structure Type: Expression: NEW METHOD ACCESS Symbol MonteCarloPi() return type int
     Structure Type: Expression: METHOD ACCESS Symbol estimatePi100(int) return type int
      Structure Type: Expression: ACCESS Symbol num_samples return type int
   Structure Type: Expression: ACCESS Symbol ioPlus return type void
    Structure Type: Expression: METHOD ACCESS Symbol printResult(int) return type void
     Structure Type: Expression: ACCESS Symbol pi_estimate_times_100 return type int




.class public MonteCarloPi
.super java/lang/Object
.method <init>()V
aload_0
invokenonvirtual java/lang/Object/<init>()V
return
.end method
; random/MathUtils
; requestNumber/ioPlus
; printResult/ioPlus
.method public performSingleEstimate()Z
.limit stack 99
.limit locals 5
; 8
; 6
; 7
iconst_0
; 7
bipush 100
isub
; 7
bipush 100
; 10
invokestatic MathUtils/random(II)I
istore_1		;rand1


; 8
; 6
; 7
iconst_0
; 7
bipush 100
isub
; 7
bipush 100
; 10
invokestatic MathUtils/random(II)I
istore_2		;rand2


; 4
; 3
; 5
; 8
iload_1		;rand1
; 8
iload_1		;rand1
imul
; 5
; 8
iload_2		;rand2
; 8
iload_2		;rand2
imul
iadd
; 7
bipush 100
idiv
istore_3		;squareDist


; 8
iload_3		;squareDist
; 7
bipush 100
if_icmpge else_0
; 7
iconst_1
istore 4		;in_circle

goto endif_0
else_0:
; 1
; 7
iconst_0
istore 4		;in_circle

endif_0:


; 13
; 8
iload 4		;in_circle
ireturn


.end method
.method public estimatePi100(I)I
.limit stack 99
.limit locals 6
; 7
iconst_0
istore_2		;samples_so_far


; 7
iconst_0
istore_3		;samples_in_circle


while_1:
; 8
iload_2		;samples_so_far
; 8
iload_1		;n
if_icmpge else_1

; 8
aload_0
; 10
invokevirtual MonteCarloPi/performSingleEstimate()Z
ifeq else_2
; 3
; 8
iload_3		;samples_in_circle
; 7
iconst_1
iadd
istore_3		;samples_in_circle

goto endif_2
else_2:
; 0
endif_2:

; 3
; 8
iload_2		;samples_so_far
; 7
iconst_1
iadd
istore_2		;samples_so_far

goto while_1
else_1:


; 4
; 5
; 7
sipush 400
; 8
iload_3		;samples_in_circle
imul
; 8
iload_1		;n
idiv
istore 4		;pi_estimate


; 13
; 8
iload 4		;pi_estimate
ireturn


.end method
.method public static main([Ljava/lang/String;)V
.limit stack 99
.limit locals 5
; 8
; 10
invokestatic ioPlus/requestNumber()I
istore_2		;num_samples


; 10
new MonteCarloPi
dup
invokespecial MonteCarloPi/<init>()V
; 8
iload_2		;num_samples
; 10
invokevirtual MonteCarloPi/estimatePi100(I)I
istore_3		;pi_estimate_times_100


; 8
; 8
iload_3		;pi_estimate_times_100
; 10
invokestatic ioPlus/printResult(I)V


return
.end method

COMPILATION SUCCESSFUL
